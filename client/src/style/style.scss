@use 'base.scss';

$themes: (
  light: (
    pageBg: base.$lightPageBg,
    leftSectionBg: base.$lightSectionBg,
    middleSectionBg: base.$White2,
    rightSectionBg: base.$lightSectionBg,
    cardBg: base.$lightCardBg,
    textColor: base.$lightTxt,
    softTextColor: base.$lightSoftTxt,
    border: base.$border,
    logo: base.$logo,
    search: base.$logo,
    hover: base.$lightHover,
  ),
  dark: (
    pageBg: base.$darkPageBg,
    leftSectionBg: base.$darkSectionBg,
    middleSectionBg: base.$darkSectionBg,
    rightSectionBg: base.$darkSectionBg,
    cardBg: base.$darkCardBg,
    textColor: base.$darkTxt,
    softTextColor: base.$darkSoftTxt,
    border: base.$border,
    logo: base.$logo,
    search: base.$darkCardBg,
    hover: base.$darkHover,
  ),
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
